package com.ceos.s7.sapi;

import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 584</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class S7_BLOCK_LIST extends Structure {
	/// C type : ord16
	public short block_type;
	/// C type : ord16
	public short block_nr;
	public S7_BLOCK_LIST() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"block_type", "block_nr"});
	}
	/**
	 * @param block_type C type : ord16<br>
	 * @param block_nr C type : ord16
	 */
	public S7_BLOCK_LIST(short block_type, short block_nr) {
		super();
		this.block_type = block_type;
		this.block_nr = block_nr;
		initFieldOrder();
	}
	public static class ByReference extends S7_BLOCK_LIST implements Structure.ByReference {
		
	};
	public static class ByValue extends S7_BLOCK_LIST implements Structure.ByValue {
		
	};
        
        @Override
        protected List getFieldOrder() {
            return Arrays.asList(new String[]{"block_type", "block_nr"});
        }           
}
