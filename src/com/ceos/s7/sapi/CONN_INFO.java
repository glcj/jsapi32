package com.ceos.s7.sapi;

import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CONN_INFO extends Structure {

	/**
	 * connection ID<br>
	 * C type : ord16
	 */
	public short cref;
	/**
	 * connection type<br>
	 * C type : ord16
	 */
	public short conn_type;
	/**
	 * connection state<br>
	 * C type : ord16
	 */
	public short conn_state;
	/**
	 * way state<br>
	 * C type : ord16[4]
	 */
	public short[] way_state = new short[4];
	public CONN_INFO() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"cref", "conn_type", "conn_state", "way_state"});
	}
	/**
	 * @param cref connection ID<br>
	 * C type : ord16<br>
	 * @param conn_type connection type<br>
	 * C type : ord16<br>
	 * @param conn_state connection state<br>
	 * C type : ord16<br>
	 * @param way_state way state<br>
	 * C type : ord16[4]
	 */
	public CONN_INFO(short cref, short conn_type, short conn_state, short way_state[]) {
		super();
		this.cref = cref;
		this.conn_type = conn_type;
		this.conn_state = conn_state;
		if (way_state.length != this.way_state.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.way_state = way_state;
		initFieldOrder();
	}
	public static class ByReference extends CONN_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends CONN_INFO implements Structure.ByValue {
		
	};
        

        @Override
        protected List getFieldOrder() {
            return Arrays.asList(new String[]{"cref", "conn_type", "conn_state", "way_state"});            
        }        
}
